{"version":3,"sources":["images/weather-svgs/thunder.svg","images/weather-svgs/cloudy.svg","images/weather-svgs/day.svg","images/weather-svgs/rainy-4.svg","images/weather-svgs/snowy-1.svg","components/SevenDay.js","components/Current.js","components/Weather.js","index.js"],"names":["SevenDay","data","useState","undefined","week","setWeek","weekDays","setWeekDays","weekWeatherSectionRef","useRef","getSvg","weather","main","cloudImage","clearImage","rainImage","snowImage","thunderImage","getFahrenheit","temperature","toFixed","useEffect","gsap","from","current","delay","y","duration","opacity","array","i","push","daily","slice","getWeekArray","Date","getDay","getWeekDayArray","className","ref","map","forecast","x","src","alt","temp","day","Current","lon","lat","setDay","setMap","currentWeatherSectionref","extraWeatherSectionref","weekWeatherSectionref","mapContainerRef","parent","firstChild","removeChild","clearMap","tomtom","key","container","center","lng","zoom","getMap","Fragment","name","sys","country","style","width","height","Weather","currentWeather","setCurrentWeather","weekWeather","setWeekWeather","usWorld","setUsWorld","usWorldRef","countryInputRef","cityInputRef","stateInputRef","stateSelectRef","url","coord","axios","post","then","response","catch","error","console","log","onChange","e","target","value","visibility","disabled","htmlFor","type","onClick","Website","ReactDOM","render","document","getElementById"],"mappings":"4OAAe,MAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,gCCA1B,MAA0B,oCCA1B,MAA0B,oC,OC6G1BA,EAnGE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,EAAwBC,wBAASC,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCH,wBAASC,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAwBC,iBAAO,MA+CrC,SAASC,EAAON,GACZ,OAAOA,EAAKO,QAAQ,GAAGC,MACnB,IAAK,OACL,IAAK,SACD,OAAOC,EAEX,IAAK,QACD,OAAOC,EAEX,IAAK,OACD,OAAOC,EAEX,IAAK,OACD,OAAOC,EAEX,QACI,OAAOC,GAQnB,SAASC,EAAcC,GACnB,OAAiC,GAAxBA,EAAc,QAAY,EAAG,IAAIC,QAAQ,GAGtD,OAzEAC,qBAAU,WACNC,IAAKC,KAAKf,EAAsBgB,QAAS,CAAEC,MAAO,IAAKC,EAAG,IAAKC,SAAU,EAAGC,QAAS,IAMzF,SAAsB3B,GAGlB,IAFA,IAAI4B,EAAQ,GAEJC,EAAI,EAAGA,EAAI,EAAGA,IAClBD,EAAME,KAAK9B,EAAK+B,MAAMF,IAG1BzB,EAAQwB,EAAMI,MAAM,IAXpBC,CAAajC,GAcjB,SAAyBA,GACrB,QAAO,IAAIkC,MAAOC,UACd,KAAK,EACD7B,EAAY,CAAC,MAAO,OAAQ,MAAO,OAAQ,QAC3C,MACJ,KAAK,EACDA,EAAY,CAAC,OAAQ,MAAO,OAAQ,MAAO,QAC3C,MACJ,KAAK,EACDA,EAAY,CAAC,MAAO,OAAQ,MAAO,MAAO,QAC1C,MACJ,KAAK,EACDA,EAAY,CAAC,OAAQ,MAAO,MAAO,MAAO,QAC1C,MACJ,KAAK,EACDA,EAAY,CAAC,MAAO,MAAO,MAAO,MAAO,SACzC,MACJ,KAAK,EACDA,EAAY,CAAC,MAAO,MAAO,MAAO,OAAQ,QAC1C,MACJ,KAAK,EACDA,EAAY,CAAC,MAAO,MAAO,OAAQ,MAAO,SAC1C,MACJ,WApCJ8B,KACD,CAACpC,IAqEA,yBAASqC,UAAU,oBAAnB,SACI,qBAAKA,UAAU,sBAAsBC,IAAK/B,EAA1C,cACeL,IAATC,QAAmCD,IAAbG,GAA2BF,EAAKoC,KAAK,SAACC,EAAUC,GACpE,OACI,sBAAKJ,UAAU,oBAAf,UACI,oBAAIA,UAAU,UAAd,SAAyBhC,EAASoC,KAClC,qBAAKC,IAAKjC,EAAO+B,GAAcG,IAAKH,EAAS9B,QAAQ,GAAGC,KAAM0B,UAAU,kBACxE,sBAAKA,UAAU,yBAAf,UACI,qBAAIA,UAAU,kBAAd,WAjBRnB,EAiBoDsB,EAASI,KAAKC,KAhB1E3B,EAAc,QAAQC,QAAQ,IAgBd,YACA,qBAAIkB,UAAU,qBAAd,UAAoCpB,EAAcuB,EAASI,KAAKC,KAAhE,iBALgCJ,GAb5D,IAAoBvB,UC4DT4B,EA9HC,SAAC,GAAiC,IAmE1B5B,EAnELK,EAA8B,EAA9BA,QAASpB,EAAqB,EAArBA,KAAM4C,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACnC,EAAsB/C,wBAASC,GAA/B,mBAAO2C,EAAP,KAAYI,EAAZ,KACA,EAAsBhD,mBAAS,IAA/B,mBAAYiD,GAAZ,WAEMC,EAA2B3C,iBAAO,MAClC4C,EAAyB5C,iBAAO,MAChC6C,EAAwB7C,iBAAO,MAC/B8C,EAAkB9C,iBAAO,MAyF/B,OAvFAY,qBAAU,WACNC,IAAKC,KAAK6B,EAAyB5B,QAAS,CAAEC,MAAO,GAAIC,EAAG,IAAKC,SAAU,EAAGC,QAAS,IACvFN,IAAKC,KAAK8B,EAAuB7B,QAAS,CAAEC,MAAO,GAAIC,EAAG,IAAKC,SAAU,EAAGC,QAAS,IACrFN,IAAKC,KAAK+B,EAAsB9B,QAAS,CAAEC,MAAO,IAAKC,EAAG,IAAKC,SAAU,EAAGC,QAAS,IA0EzF,SAAkB4B,GACd,KAAMA,EAAOC,YAAY,CACrB,QAActD,IAAXqD,EACC,OAGJA,EAAOE,YAAYF,EAAOC,aA9E9BE,CAASJ,EAAgB/B,SACzB0B,EAIJ,WACI,QAAO,IAAIf,MAAOC,UACd,KAAK,EACD,MAAO,SAEX,KAAK,EACD,MAAO,SAEX,KAAK,EACD,MAAO,UAEX,KAAK,EACD,MAAO,YAEX,KAAK,EACD,MAAO,WAEX,KAAK,EACD,MAAO,SAEX,KAAK,EACD,MAAO,WAEX,QACI,QA5BDA,IA4DX,WACI,IAAII,EAAMoB,MAAW,CACjBC,IAAK,mCACLC,UAAWP,EAAgB/B,QAC3BuC,OAAQ,CAACd,IAAKA,EAAKe,IAAKhB,GACxBiB,KAAM,KAGVd,EAAOX,GAnEP0B,KACD,CAAC1C,IAgFA,eAAC,IAAM2C,SAAP,WACI,uBAAM7B,UAAU,0BAAhB,UACI,sBAAKA,UAAU,4BAA4BC,IAAKa,EAAhD,UACI,qBAAId,UAAU,2BAAd,UAA0Cd,EAAQ4C,KAAlD,KAA0D5C,EAAQ6C,IAAIC,WACtE,sBAAKhC,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKK,IAxD7B,WACI,OAAOnB,EAAQb,QAAQ,GAAGC,MACtB,IAAK,OACL,IAAK,SACD,OAAOC,EAEX,IAAK,QACD,OAAOC,EAEX,IAAK,OACD,OAAOC,EAEX,IAAK,OACD,OAAOC,EAEX,QACI,OAAOC,GAwCeP,GAAUkC,IAAI,OAE5B,sBAAKN,UAAU,eAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,6BAAKQ,IACL,6BAAKtB,EAAQb,QAAQ,GAAGC,UAE5B,sBAAK0B,UAAU,iBAAf,UACI,gCA5CRnB,EA4CwBK,EAAQZ,KAAKiC,MA3C7C1B,EAAc,QAAQC,QAAQ,IA2Cd,YACA,+BAzC5B,SAAuBD,GACnB,OAAiC,GAAxBA,EAAc,QAAY,EAAG,IAAIC,QAAQ,GAwCrBF,CAAcM,EAAQZ,KAAKiC,MAAhC,wBAKhB,qBAAKP,UAAU,0BAA0BC,IAAKc,EAA9C,SACI,qBAAKf,UAAU,wBAAwBC,IAAKgB,EAAiBgB,MAAO,CAAEC,MAAO,QAASC,OAAQ,gBAGtG,cAAC,EAAD,CAAUxE,KAAMG,QCWbsE,EA9IC,WACZ,MAA4CxE,wBAASC,GAArD,mBAAOwE,EAAP,KAAuBC,EAAvB,KACA,EAAsC1E,wBAASC,GAA/C,mBAAO0E,EAAP,KAAoBC,EAApB,KACA,EAA8B5E,wBAASC,GAAvC,mBAAO4E,EAAP,KAAgBC,EAAhB,KAEMC,EAAaxE,iBAAO,MACpByE,EAAkBzE,iBAAO,MACzB0E,EAAe1E,iBAAO,MACtB2E,EAAgB3E,iBAAO,MACvB4E,EAAiB5E,iBAAO,MA8C9B,OA5CAY,qBAAU,WACN,QAAsBlB,IAAnBwE,EAAH,CAIA,IACMW,EAAG,8DAA0DX,EAAeY,MAAMtC,IAA/E,gBAA0F0B,EAAeY,MAAMvC,IAA/G,mBADM,oCAGfwC,IAAMC,KAAKH,GACVI,MAAK,SAACC,GAAD,OAAcb,EAAea,EAAS1F,SAC3C2F,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,SAE/B,CAAClB,IAiCA,eAAC,IAAMR,SAAP,WACI,qBAAK7B,UAAU,iBAAf,SACI,uBAAMA,UAAU,eAAhB,UACI,qBAAKA,UAAU,qBAAf,SACI,yBAAQ8B,KAAK,WAAW9B,UAAU,oBAAoBC,IAAK0C,EAAYe,SAAU,SAAAC,GAAC,OAjBtG,SAAkBA,GACQ,UAAnBA,EAAEC,OAAOC,OACRnB,EAAW,SACXI,EAAc5D,QAAQ+C,MAAM6B,WAAa,SACzClB,EAAgB1D,QAAQ6E,UAAW,IAEnCrB,EAAW,MACXI,EAAc5D,QAAQ+C,MAAM6B,WAAa,UACzClB,EAAgB1D,QAAQ6E,UAAW,GAS+DL,CAASC,IAA/F,UACI,wBAAQE,MAAM,KAAd,2BACA,wBAAQA,MAAM,QAAd,wBAIR,sBAAK7D,UAAU,kCAAf,UACI,uBAAOgE,QAAQ,OAAf,oBACA,uBAAOC,KAAK,OAAOnC,KAAK,OAAO7B,IAAK4C,OAGxC,sBAAK7C,UAAU,qCAAf,UACI,uBAAOgE,QAAQ,UAAf,uBACA,uBAAOC,KAAK,OAAOnC,KAAK,UAAUiC,SAAS,WAAW/D,UAAU,UAAUC,IAAK2C,OAGnF,sBAAK5C,UAAU,mCAAmCC,IAAK6C,EAAvD,UACI,uBAAOkB,QAAQ,QAAf,qBACA,yBAAQlC,KAAK,QAAQ9B,UAAU,iBAAiBC,IAAK8C,EAArD,UACI,wBAAQc,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,yBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,kBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,2BACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,yBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,2BACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,4BACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,kBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,4BACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,kBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,2BACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,2BAIR,qBAAK7D,UAAU,mBAAf,SACI,wBAAQiE,KAAK,SAASjE,UAAU,SAASkE,QA5G7D,WACI,GAAe,UAAZzB,EAAqB,CACpB,IACMO,EAAG,4DAAwDH,EAAa3D,QAAQ2E,MAA7E,YAAsFjB,EAAgB1D,QAAQ2E,MAA9G,kBADM,oCAGfX,IAAMC,KAAKH,GACVI,MAAK,SAACC,GAAD,OAAcf,EAAkBe,EAAS1F,SAC9C2F,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,UAC3B,CACH,IACMP,EAAG,4DAAwDH,EAAa3D,QAAQ2E,MAA7E,YAAsFd,EAAe7D,QAAQ2E,MAA7G,qBADM,oCAGfX,IAAMC,KAAKH,GACVI,MAAK,SAACC,GAAD,OAAcf,EAAkBe,EAAS1F,SAC9C2F,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QA8FlB,gCAIK1F,IAAhB0E,GAA6B,cAAC,EAAD,CAASrD,QAASmD,EAAgBvE,KAAMyE,EAAa7B,IAAK2B,EAAeY,MAAMvC,IAAKC,IAAK0B,EAAeY,MAAMtC,UCrIlJwD,EAAU,WACd,OACE,cAAC,IAAMtC,SAAP,UACE,cAAC,EAAD,OAKNuC,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,W","file":"static/js/main.2583feca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/thunder.19ff3c30.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.24f9a474.svg\";","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","export default __webpack_public_path__ + \"static/media/rainy-4.9988edfd.svg\";","export default __webpack_public_path__ + \"static/media/snowy-1.27113af0.svg\";","/* eslint-disable no-unreachable */\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport gsap from 'gsap'\r\n\r\nimport thunderImage from '../images/weather-svgs/thunder.svg'\r\nimport cloudImage from '../images/weather-svgs/cloudy.svg'\r\nimport clearImage from '../images/weather-svgs/day.svg'\r\nimport rainImage from '../images/weather-svgs/rainy-4.svg'\r\nimport snowImage from '../images/weather-svgs/snowy-1.svg'\r\n\r\nconst SevenDay = ({ data }) => {\r\n    const [week, setWeek] = useState(undefined)\r\n    const [weekDays, setWeekDays] = useState(undefined)\r\n\r\n    const weekWeatherSectionRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        gsap.from(weekWeatherSectionRef.current, { delay: 1.1, y: 200, duration: 1, opacity: 0 })\r\n\r\n        getWeekArray(data)\r\n        getWeekDayArray(data)\r\n    }, [data])\r\n\r\n    function getWeekArray(data) {\r\n        let array = []\r\n\r\n        for(let i = 0; i < 6; i++) {\r\n            array.push(data.daily[i])\r\n        } \r\n        \r\n        setWeek(array.slice(1))\r\n    }\r\n\r\n    function getWeekDayArray(data) {\r\n        switch(new Date().getDay()) {\r\n            case 0:\r\n                setWeekDays(['Mon', 'Tues', 'Wed', 'Thur', 'Fri'])\r\n                break\r\n            case 1:\r\n                setWeekDays(['Tues', 'Wed', 'Thur', 'Fri', 'Sat'])\r\n                break\r\n            case 2:\r\n                setWeekDays(['Wed', 'Thur', 'Fri', 'Sat', 'Sun'])\r\n                break\r\n            case 3:\r\n                setWeekDays(['Thur', 'Fri', 'Sat', 'Sun', 'Mon'])\r\n                break\r\n            case 4:\r\n                setWeekDays(['Fri', 'Sat', 'Sun', 'Mon', 'Tues'])\r\n                break\r\n            case 5:\r\n                setWeekDays(['Sat', 'Sun', 'Mon', 'Tues', 'Wed'])\r\n                break\r\n            case 6:\r\n                setWeekDays(['Sun', 'Mon', 'Tues', 'Wed', 'Thur'])\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    function getSvg(week) {\r\n        switch(week.weather[0].main) {\r\n            case 'Haze':\r\n            case 'Clouds' :\r\n                return cloudImage\r\n                break\r\n            case 'Clear' :\r\n                return clearImage\r\n                break\r\n            case 'Rain' :\r\n                return rainImage\r\n                break\r\n            case 'Snow' :\r\n                return snowImage\r\n                break\r\n            default:\r\n                return thunderImage\r\n        }\r\n    }\r\n\r\n    function getCelcius(temperature) {\r\n        return (temperature - 273.15).toFixed(2)\r\n    }\r\n\r\n    function getFahrenheit(temperature) {\r\n        return ((temperature - 273.15) * 9/5 +32).toFixed(1)\r\n    }\r\n\r\n    return (\r\n        <section className=\"seven-day-section\">\r\n            <div className=\"seven-day-container\" ref={weekWeatherSectionRef}>\r\n                {(week !== undefined && weekDays !== undefined) && week.map( (forecast, x) => {\r\n                    return (\r\n                        <div className=\"weekday-container\" key={x}>\r\n                            <h2 className=\"weekday\">{weekDays[x]}</h2>\r\n                            <img src={getSvg(forecast, x)} alt={forecast.weather[0].main} className='weekday-image'/>\r\n                            <div className=\"weekday-temp-container\">\r\n                                <h3 className=\"weekday-celsius\">{getCelcius(forecast.temp.day)}&deg; C</h3>\r\n                                <h3 className=\"weekday-fahrenheit\">{getFahrenheit(forecast.temp.day)}&deg; F</h3>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } )}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SevenDay","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unreachable */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useRef, useEffect, useState } from 'react'\r\nimport gsap from 'gsap'\r\nimport * as tomtom from '@tomtom-international/web-sdk-maps'\r\n\r\nimport SevenDay from './SevenDay'\r\n\r\nimport thunderImage from '../images/weather-svgs/thunder.svg'\r\nimport cloudImage from '../images/weather-svgs/cloudy.svg'\r\nimport clearImage from '../images/weather-svgs/day.svg'\r\nimport rainImage from '../images/weather-svgs/rainy-4.svg'\r\nimport snowImage from '../images/weather-svgs/snowy-1.svg'\r\n\r\nconst Current = ({ current, week, lon, lat }) => {\r\n    const [day, setDay] = useState(undefined)\r\n    const [map, setMap] = useState({})\r\n\r\n    const currentWeatherSectionref = useRef(null)\r\n    const extraWeatherSectionref = useRef(null)\r\n    const weekWeatherSectionref = useRef(null)\r\n    const mapContainerRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        gsap.from(currentWeatherSectionref.current, { delay: .5, y: 200, duration: 1, opacity: 0 })\r\n        gsap.from(extraWeatherSectionref.current, { delay: .8, y: 200, duration: 1, opacity: 0 })\r\n        gsap.from(weekWeatherSectionref.current, { delay: 1.1, y: 200, duration: 1, opacity: 0 })\r\n\r\n        clearMap(mapContainerRef.current)\r\n        setDay(getDay())\r\n        getMap()\r\n    }, [current])\r\n\r\n    function getDay() {\r\n        switch(new Date().getDay()) {\r\n            case 0:\r\n                return 'Sunday'\r\n                break\r\n            case 1:\r\n                return 'Monday'\r\n                break\r\n            case 2:\r\n                return 'Tuesday'\r\n                break\r\n            case 3:\r\n                return 'Wednesday'\r\n                break\r\n            case 4:\r\n                return 'Thursday'\r\n                break\r\n            case 5:\r\n                return 'Friday'\r\n                break\r\n            case 6:\r\n                return 'Saturday'\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    function getSvg() {\r\n        switch(current.weather[0].main) {\r\n            case 'Haze':\r\n            case 'Clouds' :\r\n                return cloudImage\r\n                break\r\n            case 'Clear' :\r\n                return clearImage\r\n                break\r\n            case 'Rain' :\r\n                return rainImage\r\n                break\r\n            case 'Snow' :\r\n                return snowImage\r\n                break\r\n            default:\r\n                return thunderImage\r\n        }\r\n    }\r\n\r\n    function getCelcius(temperature) {\r\n        return (temperature - 273.15).toFixed(2)\r\n    }\r\n\r\n    function getFahrenheit(temperature) {\r\n        return ((temperature - 273.15) * 9/5 +32).toFixed(1)\r\n    }\r\n\r\n    function getMap() {\r\n        let map = tomtom.map({\r\n            key: 'QFuH9GAzs8lu80rEHhmPm0ShlbWQkgIv',\r\n            container: mapContainerRef.current,\r\n            center: {lat: lat, lng: lon}, \r\n            zoom: 12\r\n        });\r\n\r\n        setMap(map)\r\n    }\r\n\r\n    function clearMap(parent) {\r\n        while(parent.firstChild) {\r\n            if(parent === undefined) {\r\n                return\r\n            }\r\n\r\n            parent.removeChild(parent.firstChild)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <main className='current-weather-section'>\r\n                <div className=\"current-weather-container\" ref={currentWeatherSectionref}>\r\n                    <h2 className=\"current-weather-location\">{current.name}, {current.sys.country}</h2>\r\n                    <div className=\"weather\">\r\n                        <div className=\"weather-image\">\r\n                            <img src={getSvg()} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"weather-info\">\r\n                            <div className=\"day-container\">\r\n                                <h2>{day}</h2>\r\n                                <h3>{current.weather[0].main}</h3>\r\n                            </div>\r\n                            <div className=\"temp-container\">\r\n                                <h4>{getCelcius(current.main.temp)}&deg; C</h4>\r\n                                <h4>{getFahrenheit(current.main.temp)}&deg; F</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"extra-weather-container\" ref={extraWeatherSectionref}>\r\n                    <div className=\"weather-map-container\" ref={mapContainerRef} style={{ width: '650px', height: '350px' }}></div>\r\n                </div>\r\n            </main>\r\n            <SevenDay data={week}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Current","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Current from './Current'\r\n\r\nconst Weather = () => {\r\n    const [currentWeather, setCurrentWeather] = useState(undefined)\r\n    const [weekWeather, setWeekWeather] = useState(undefined)\r\n    const [usWorld, setUsWorld] = useState(undefined)\r\n\r\n    const usWorldRef = useRef(null)\r\n    const countryInputRef = useRef(null)\r\n    const cityInputRef = useRef(null)\r\n    const stateInputRef = useRef(null)\r\n    const stateSelectRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if(currentWeather === undefined) {\r\n            return\r\n        }\r\n\r\n        const apiKey = 'ae0aad49efd890348b878da1481b397c'\r\n        const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${currentWeather.coord.lat}&lon=${currentWeather.coord.lon}&&appid=${apiKey}`\r\n\r\n        axios.post(url)\r\n        .then((response) => setWeekWeather(response.data))\r\n        .catch((error) => console.log(error))\r\n\r\n    }, [currentWeather])\r\n\r\n    function handleWeatherFetch() {\r\n        if(usWorld === 'world') {\r\n            const apiKey = 'ae0aad49efd890348b878da1481b397c'\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityInputRef.current.value},${countryInputRef.current.value}&appid=${apiKey}`\r\n\r\n            axios.post(url)\r\n            .then((response) => setCurrentWeather(response.data))\r\n            .catch((error) => console.log(error))\r\n        } else {\r\n            const apiKey = 'ae0aad49efd890348b878da1481b397c'\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityInputRef.current.value},${stateSelectRef.current.value},us&appid=${apiKey}`\r\n\r\n            axios.post(url)\r\n            .then((response) => setCurrentWeather(response.data))\r\n            .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    function onChange(e) {\r\n        if(e.target.value === 'world') {\r\n            setUsWorld('world')\r\n            stateInputRef.current.style.visibility = 'hidden'\r\n            countryInputRef.current.disabled = false\r\n        } else {\r\n            setUsWorld('us')\r\n            stateInputRef.current.style.visibility = 'visible'\r\n            countryInputRef.current.disabled = true\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <nav className=\"navigation-bar\">\r\n                <form className='input-fields'>\r\n                    <div className='us-world-container'>\r\n                        <select name=\"us-world\" className='us-world dropdown' ref={usWorldRef} onChange={e => onChange(e)}>\r\n                            <option value=\"us\">United States</option>\r\n                            <option value=\"world\">World</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"city-container input-containers\">\r\n                        <label htmlFor=\"city\">City: </label>\r\n                        <input type=\"text\" name='city' ref={cityInputRef}/>\r\n                    </div>\r\n                    \r\n                    <div className=\"country-container input-containers\">\r\n                        <label htmlFor=\"country\">Country: </label>\r\n                        <input type=\"text\" name='country' disabled='disabled' className='country' ref={countryInputRef}/>\r\n                    </div>\r\n\r\n                    <div className=\"state-container input-containers\" ref={stateInputRef}>\r\n                        <label htmlFor=\"state\">State: </label>\r\n                        <select name=\"state\" className='state dropdown' ref={stateSelectRef}>\r\n                            <option value=\"al\">Alabama</option>\r\n                            <option value=\"ak\">Alaska</option>\r\n                            <option value=\"az\">Arizona</option>\r\n                            <option value=\"ar\">Arkansas</option>\r\n                            <option value=\"ca\">California</option>\r\n                            <option value=\"co\">Colorado</option>\r\n                            <option value=\"ct\">Connecticut</option>\r\n                            <option value=\"de\">Delaware</option>\r\n                            <option value=\"fl\">Florida</option>\r\n                            <option value=\"ga\">Georgia</option>\r\n                            <option value=\"hi\">Hawaii</option>\r\n                            <option value=\"id\">Idaho</option>\r\n                            <option value=\"il\">Illinois</option>\r\n                            <option value=\"in\">Indiana</option>\r\n                            <option value=\"ia\">Iowa</option>\r\n                            <option value=\"ks\">Kansas</option>\r\n                            <option value=\"ky\">Kentucky</option>\r\n                            <option value=\"la\">Louisiana</option>\r\n                            <option value=\"me\">Maine</option>\r\n                            <option value=\"md\">Maryland</option>\r\n                            <option value=\"ma\">Massachusetts</option>\r\n                            <option value=\"mi\">Michagan</option>\r\n                            <option value=\"mn\">Minnesota</option>\r\n                            <option value=\"ms\">Mississippi</option>\r\n                            <option value=\"mo\">Misssouri</option>\r\n                            <option value=\"mt\">Montana</option>\r\n                            <option value=\"ne\">Nebraska</option>\r\n                            <option value=\"nv\">Nevada</option>\r\n                            <option value=\"nh\">New Hampshire</option>\r\n                            <option value=\"nj\">New Jersey</option>\r\n                            <option value=\"nm\">New Mexico</option>\r\n                            <option value=\"ny\">New York</option>\r\n                            <option value=\"nc\">North Carolina</option>\r\n                            <option value=\"nd\">North Dakota</option>\r\n                            <option value=\"oh\">Ohio</option>\r\n                            <option value=\"ok\">Oklahoma</option>\r\n                            <option value=\"or\">Oregon</option>\r\n                            <option value=\"pa\">Pennsylvania</option>\r\n                            <option value=\"ri\">Rhode Island</option>\r\n                            <option value=\"sc\">South Carolina</option>\r\n                            <option value=\"sd\">South Dakota</option>\r\n                            <option value=\"tn\">Tennessee</option>\r\n                            <option value=\"tx\">Texas</option>\r\n                            <option value=\"ut\">Utah</option>\r\n                            <option value=\"vt\">Vermont</option>\r\n                            <option value=\"va\">Virginia</option>\r\n                            <option value=\"wa\">Washington</option>\r\n                            <option value=\"wv\">West Virginia</option>\r\n                            <option value=\"wi\">Wisconsin</option>\r\n                            <option value=\"wy\">Wyoming</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className='search-container'>\r\n                        <button type='button' className='search' onClick={handleWeatherFetch}>Search</button>\r\n                    </div>\r\n                </form>\r\n            </nav>\r\n            {weekWeather !== undefined && <Current current={currentWeather} week={weekWeather} lon={currentWeather.coord.lon} lat={currentWeather.coord.lat}/>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Weather","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// CSS Import\nimport './index.css';\n\n// Components Import\nimport Weather from './components/Weather';\n\nconst Website = () => {\n  return (\n    <React.Fragment>\n      <Weather />\n    </React.Fragment>\n  )\n}\n\nReactDOM.render(<Website />, document.getElementById('root'))"],"sourceRoot":""}